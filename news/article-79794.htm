<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://mihomonode.github.io/news/article-79794.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>spring-kafka @KafkaListener详解与使用</title>
        <meta name="description" content="Kafka高质量专栏请看石臻臻的杂货铺的Kafka专栏 说明   从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这" />
        <link rel="icon" href="/assets/website/img/mihomonode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Mihomo Node免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://mihomonode.github.io/news/article-79794.htm" />
    <meta property="og:site_name" content="Mihomo Node免费机场订阅节点官网" />
    <meta property="og:title" content="spring-kafka @KafkaListener详解与使用" />
    <meta property="og:image" content="https://mihomonode.github.io/uploads/20240922/6002969fb7a45407b1964691d3762185.webp" />
        <meta property="og:release_date" content="2025-03-23T08:24:01" />
    <meta property="og:updated_time" content="2025-03-23T08:24:01" />
        <meta property="og:description" content="Kafka高质量专栏请看石臻臻的杂货铺的Kafka专栏 说明   从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="spring-kafka @KafkaListener详解与使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- ::::::::::::::All CSS Files here :::::::::::::: -->
    <!-- Vendor CSS -->
    <!-- <link rel="stylesheet" href="/assets/website/css/mihomonode/vendor/icofont.min.css"> -->
    <!-- Plugin CSS -->
    <!-- <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/swiper-bundle.min.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/animate.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/venobox.min.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/aos.min.css"> -->
    <!-- Main CSS -->
    <!-- <link rel="stylesheet" href="/assets/website/css/mihomonode/style.css"> -->
    <!-- Use the minified version files listed below for better performance and remove the files listed above -->
    <link rel="stylesheet" href="/assets/website/css/mihomonode/vendor/vendor.min.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/plugins/plugins.min.css">
    <link rel="stylesheet" href="/assets/website/css/mihomonode/style.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-48SEJZYLPW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-48SEJZYLPW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <main class="main-wrapper">
                <!-- .....:::::: Start Header Section :::::.... -->
        <header class="header-section d-none d-lg-block">
            <!-- Start Header Bottom -->
            <div class="header-bottom sticky-header">
                <div class="container">
                    <div class="row justify-content-between align-items-center">
                        <div class="col-auto">
                            <!-- Start Header Logo -->
                            <div class="logo">
                                <a href="/">
                                                                <span>Mihomo Node</span>
                                                                </a>
                            </div>
                            <!-- End Header Logo -->
                        </div>
                        <div class="col-auto">
                            <!-- Start Header Logo -->
                            <ul class="header-nav">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                            </ul>
                            <!-- End Header Logo -->
                        </div>
                        <div class="col-auto">
                            <!-- Start Header Social Link -->
                            <ul class="social-link social-link-white">
                                <li><a target="_blank" href="#"><i class="icofont-facebook"></i></a>
                                </li>
                                <li><a target="_blank" href="#"><i class="icofont-twitter"></i></a>
                                </li>
                                <li><a target="_blank" href="#"><i class="icofont-skype"></i></a></li>
                            </ul>
                            <!-- Start Header Social Link -->
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Header Bottom -->
        </header>
        <!-- .....:::::: End Header Section :::::.... -->

        <!-- .....:::::: Start Mobile Header Section :::::.... -->
        <div class="mobile-header d-block d-lg-none">
            <div class="container">
                <div class="row align-items-center justify-content-between">
                    <div class="col">
                        <div class="mobile-logo">
                            <a href="/">
                                Mihomo Node
                            </a>
                        </div>
                    </div>
                    <div class="col">
                        <div class="mobile-action-link text-end">
                            <a href="#mobile-menu-offcanvas" class="offcanvas-toggle offside-menu"><i class="icofont-navigation-menu"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- .....:::::: Start MobileHeader Section :::::.... -->
        <!--  Start Offcanvas Mobile Menu Section -->
        <div id="mobile-menu-offcanvas" class="offcanvas offcanvas-rightside offcanvas-mobile-menu-section">
            <!-- Start Offcanvas Header -->
            <div class="offcanvas-header text-right">
                <button class="offcanvas-close"><i class="icofont-close-line"></i></button>
            </div> <!-- End Offcanvas Header -->
            <!-- Start Offcanvas Mobile Menu Wrapper -->
            <div class="offcanvas-mobile-menu-wrapper">
                <!-- Start Mobile Menu  -->
                <div class="mobile-menu-bottom">
                    <!-- Start Mobile Menu Nav -->
                    <div class="offcanvas-menu">
                        <ul>
                                                        <li>
                                <a href="/"><span>首页</span></a>
                            </li>
                                                        <li>
                                <a href="/free-nodes/"><span>免费节点</span></a>
                            </li>
                                                        <li>
                                <a href="/paid-subscribe/"><span>推荐机场</span></a>
                            </li>
                                                        <li>
                                <a href="/client.htm"><span>客户端</span></a>
                            </li>
                                                        <li>
                                <a href="/news/"><span>新闻资讯</span></a>
                            </li>
                                                    </ul>
                    </div> <!-- End Mobile Menu Nav -->
                </div> <!-- End Mobile Menu -->
                <!-- Start Mobile contact Info -->
                <div class="mobile-contact-info text-center">
                    <ul class="social-link social-link-white">
                        <li><a target="_blank" href="#"><i class="icofont-facebook"></i></a>
                        </li>
                        <li><a target="_blank" href="#"><i class="icofont-twitter"></i></a>
                        </li>
                        <li><a target="_blank" href="#"><i class="icofont-skype"></i></a></li>
                    </ul>
                </div>
                <!-- End Mobile contact Info -->
            </div> <!-- End Offcanvas Mobile Menu Wrapper -->
        </div>
        <!-- ...:::: End Offcanvas Mobile Menu Section:::... -->
        <!-- Offcanvas Overlay -->
        <div class="offcanvas-overlay"></div>
        <!-- .....:::::: Start Breadcrumb Section :::::.... -->
        <div class="breadcrumb-section">
            <div class="breadcrumb-wrapper">
                <div class="image"><img src="/assets/website/img/mihomonode/background/breadcrumb.png" alt=""></div>
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <div class="content">
                                <h1 class="title">spring-kafka @KafkaListener详解与使用</h1>
                                <ol class="breadcrumb-link">
                                    <li><a href="/">首页</a></li>
                                    <li><a href="/news/">新闻资讯</a></li>
                                    <li class="active" aria-current="page">正文</li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- .....:::::: End Breadcrumb Section :::::.... -->
        <!-- .....:::::: Start Service Display Section :::::.... -->
        <div class="service-display-section section-top-space py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <p>Kafka高质量专栏请看<a href="szzdzhp.com/kafka" rel="nofollow">石臻臻的杂货铺的Kafka专栏</a></p> <h2><a id="_6" rel="nofollow"></a>说明</h2> <ul> <li> <p>从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些<strong>属性将覆盖在使用者工厂中配置的具有相同名称的所有属性</strong>。您不能通过这种方式指定group.id和client.id属性。他们将被忽略；</p> </li> <li> <p><strong>可以使用#{…}或属性占位符（${…}）在SpEL上配置注释上的大多数属性。</strong><br /> 比如:</p> </li> </ul> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"consumer-id"</span><span class="token punctuation">,</span>topics<span class="token operator">=</span><span class="token string">"SHI_TOPIC1"</span><span class="token punctuation">,</span>concurrency<span class="token operator">=</span><span class="token string">"${listen.concurrency:3}"</span><span class="token punctuation">,</span>             clientIdPrefix<span class="token operator">=</span><span class="token string">"myClientId"</span><span class="token punctuation">)</span></code></pre> <p>属性<code>concurrency</code>将会从容器中获取<code>listen.concurrency</code>的值,如果不存在就默认用3</p> <hr/> <h2><a id="KafkaListener_20" rel="nofollow"></a>@KafkaListener详解</h2> <h3><a id="id__id_21" rel="nofollow"></a>id 监听器的id</h3> <h4><a id="__22" rel="nofollow"></a>①. 消费者线程命名规则</h4> <p>填写:</p> <blockquote> <p>2020-11-19 14:24:15 c.d.b.k.KafkaListeners 120 [INFO] 线程:Thread[<strong><code>consumer-id5-1-C-1</code></strong>,5,main]-groupId:BASE-DEMO consumer-id5 消费</p> </blockquote> <p>没有填写ID:</p> <blockquote> <p>2020-11-19 10:41:26 c.d.b.k.KafkaListeners 137 [INFO] 线程:Thread[<strong><code>org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1</code></strong>,5,main] consumer-id7</p> </blockquote> <h4><a id="ID_30" rel="nofollow"></a>②.在相同容器中的监听器ID不能重复</h4> <p>否则会报错</p> <pre><code>Caused by: java.lang.IllegalStateException: Another endpoint is already registered with id</code></pre> <h4><a id="GroupId_37" rel="nofollow"></a>③.会覆盖消费者工厂的消费组GroupId</h4> <p>假如配置文件属性配置了消费组<code>kafka.consumer.group-id=BASE-DEMO</code><br /> 正常情况它是该容器中的默认消费组<br /> 但是如果设置了<code>@KafkaListener(id = "consumer-id7", topics = {"SHI_TOPIC3"})</code><br /> 那么当前消费者的消费组就是<code>consumer-id7</code> ;</p> <p><strong>当然如果你不想要他作为groupId的话 可以设置属性<code>idIsGroup = false</code>;那么还是会使用默认的GroupId;</strong></p> <h4><a id="_groupId_45" rel="nofollow"></a>④. 如果配置了属性groupId,则其优先级最高</h4> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"consumer-id5"</span><span class="token punctuation">,</span>idIsGroup<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>topics<span class="token operator">=</span><span class="token string">"SHI_TOPIC3"</span><span class="token punctuation">,</span>groupId<span class="token operator">=</span><span class="token string">"groupId-test"</span><span class="token punctuation">)</span></code></pre> <p>例如上面代码中最终这个消费者的消费组<code>GroupId</code>是 “groupId-test”</p> <p>该id属性（如果存在）将用作Kafka消费者group.id属性,并覆盖消费者工厂中的已配置属性（如果存在）您还可以groupId显式设置或将其设置idIsGroup为false，以恢复使用使用者工厂的先前行为group.id。</p> <h3><a id="groupId__55" rel="nofollow"></a>groupId 消费组名</h3> <blockquote> <p>指定该消费组的消费组名; 关于消费组名的配置可以看看上面的<strong>id 监听器的id</strong></p> </blockquote> <h4><a id="_groupid_58" rel="nofollow"></a>如何获取消费者 group.id</h4> <p>在监听器中调用<code>KafkaUtils.getConsumerGroupId()</code>可以获得当前的groupId; 可以在日志中打印出来; 可以知道是哪个客户端消费的;</p> <h3><a id="topics_topictopicPatterntopicPartitions__61" rel="nofollow"></a>topics 指定要监听哪些topic(与topicPattern、topicPartitions 三选一)</h3> <p>可以同时监听多个<br /><code>topics = {"SHI_TOPIC3","SHI_TOPIC4"}</code></p> <h3><a id="topicPattern_TopictopicstopicPartitions__65" rel="nofollow"></a>topicPattern 匹配Topic进行监听(与topics、topicPartitions 三选一)</h3> <h3><a id="topicPartitions__67" rel="nofollow"></a>topicPartitions 显式分区分配</h3> <blockquote> <p>可以为监听器配置明确的主题和分区（以及可选的初始偏移量）</p> </blockquote> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"thing2"</span><span class="token punctuation">,</span> topicPartitions<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@TopicPartition</span><span class="token punctuation">(</span>topic<span class="token operator">=</span><span class="token string">"topic1"</span><span class="token punctuation">,</span> partitions<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token annotation punctuation">@TopicPartition</span><span class="token punctuation">(</span>topic<span class="token operator">=</span><span class="token string">"topic2"</span><span class="token punctuation">,</span> partitions<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span>              partitionOffsets<span class="token operator">=</span><span class="token annotation punctuation">@PartitionOffset</span><span class="token punctuation">(</span>partition<span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">,</span> initialOffset<span class="token operator">=</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token class-name">ConsumerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token keyword">record</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></code></pre> <p>上面例子意思是 监听<code>topic1</code>的0,1分区；监听<code>topic2</code>的第0分区,并且第1分区从offset为100的开始消费;</p> <h3><a id="errorHandler__82" rel="nofollow"></a>errorHandler 异常处理</h3> <p>实现<code>KafkaListenerErrorHandler</code>; 然后做一些异常处理;</p> <pre><code>@Component public class KafkaDefaultListenerErrorHandler implements KafkaListenerErrorHandler {     @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception) {         return null;     }      @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception, Consumer&lt;?, ?&gt; consumer) {     	//do someting         return null;     } }</code></pre> <p>调用的时候 填写beanName;例如<code>errorHandler="kafkaDefaultListenerErrorHandler"</code></p> <h3><a id="containerFactory__101" rel="nofollow"></a>containerFactory 监听器工厂</h3> <blockquote> <p>指定生成监听器的工厂类;</p> </blockquote> <p>例如我写一个 批量消费的工厂类</p> <pre><code class="prism language-java"><span class="token comment">/**      * 监听器工厂 批量消费      * @return      */</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">KafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConcurrentMessageListenerContainer</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token function">batchFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ConcurrentKafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> factory<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ConcurrentKafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConsumerFactory</span><span class="token punctuation">(</span><span class="token function">kafkaConsumerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置为批量消费，每个批次数量在Kafka配置参数中设置ConsumerConfig.MAX_POLL_RECORDS_CONFIG</span>         factory<span class="token punctuation">.</span><span class="token function">setBatchListener</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> factory<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>使用<code>containerFactory = "batchFactory"</code></p> <h3><a id="clientIdPrefix__122" rel="nofollow"></a>clientIdPrefix 客户端前缀</h3> <blockquote> <p>会覆盖消费者工厂的<code>kafka.consumer.client-id</code>属性; 最为前缀后面接<code>-n</code> n是数字</p> </blockquote> <h3><a id="concurrency_125" rel="nofollow"></a>concurrency并发数</h3> <blockquote> <p>会覆盖消费者工厂中的concurrency ,这里的并发数就是多线程消费; 比如说单机情况下,你设置了3; 相当于就是启动了3个客户端来分配消费分区;分布式情况 总线程数=concurrency*机器数量; 并不是设置越多越好,具体如何设置请看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://shirenchuang.blog.csdn.net/article/details/109778491"  rel="nofollow">属性concurrency的作用及配置(RoundRobinAssignor 、RangeAssignor)</a></p> </blockquote> <pre><code class="prism language-java"><span class="token comment">/**      * 监听器工厂       * @return      */</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">KafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConcurrentMessageListenerContainer</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token function">concurrencyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ConcurrentKafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> factory<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ConcurrentKafkaListenerContainerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConsumerFactory</span><span class="token punctuation">(</span><span class="token function">kafkaConsumerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConcurrency</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> factory<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"consumer-id5"</span><span class="token punctuation">,</span>idIsGroup<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>topics<span class="token operator">=</span><span class="token string">"SHI_TOPIC3"</span><span class="token punctuation">,</span> containerFactory<span class="token operator">=</span><span class="token string">"concurrencyFactory"</span><span class="token punctuation">,</span>concurrency<span class="token operator">=</span> "<span class="token number">1</span><span class="token punctuation">)</span></code></pre> <p>虽然使用的工厂是<code>concurrencyFactory</code>(concurrency配置了6); 但是他最终生成的监听器数量 是1;</p> <h3><a id="properties__148" rel="nofollow"></a>properties 配置其他属性</h3> <p>kafka中的属性看<code>org.apache.kafka.clients.consumer.ConsumerConfig</code> ;<br /> 同名的都可以修改掉;</p> <p>用法</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"consumer-id5"</span><span class="token punctuation">,</span>idIsGroup<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>topics<span class="token operator">=</span><span class="token string">"SHI_TOPIC3"</span><span class="token punctuation">,</span> containerFactory<span class="token operator">=</span><span class="token string">"concurrencyFactory"</span><span class="token punctuation">,</span>concurrency<span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">,</span> clientIdPrefix<span class="token operator">=</span><span class="token string">"myClientId5"</span><span class="token punctuation">,</span>groupId<span class="token operator">=</span><span class="token string">"groupId-test"</span><span class="token punctuation">,</span>             properties<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"enable.auto.commit:false"</span><span class="token punctuation">,</span><span class="token string">"max.poll.interval.ms:6000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>errorHandler<span class="token operator">=</span><span class="token string">"kafkaDefaultListenerErrorHandler"</span><span class="token punctuation">)</span></code></pre> <h2><a id="KafkaListener_161" rel="nofollow"></a>@KafkaListener使用</h2> <h2><a id="KafkaListenerEndpointRegistry_164" rel="nofollow"></a>KafkaListenerEndpointRegistry</h2> <pre><code class="prism language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">KafkaListenerEndpointRegistry</span> registry<span class="token punctuation">;</span><span class="token comment">//.... 获取所有注册的监听器</span>         registry<span class="token punctuation">.</span><span class="token function">getAllListenerContainers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3><a id="_174" rel="nofollow"></a>设置入参验证器</h3> <p><strong>当您将Spring Boot与验证启动器一起使用时，将LocalValidatorFactoryBean自动配置：如下</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableKafka</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">Config</span><span class="token keyword">implements</span><span class="token class-name">KafkaListenerConfigurer</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">LocalValidatorFactoryBean</span> validator<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">configureKafkaListeners</span><span class="token punctuation">(</span><span class="token class-name">KafkaListenerEndpointRegistrar</span> registrar<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       registrar<span class="token punctuation">.</span><span class="token function">setValidator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validator<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>使用</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token string">"validated"</span><span class="token punctuation">,</span> topics<span class="token operator">=</span><span class="token string">"annotated35"</span><span class="token punctuation">,</span> errorHandler<span class="token operator">=</span><span class="token string">"validationErrorHandler"</span><span class="token punctuation">,</span>       containerFactory<span class="token operator">=</span><span class="token string">"kafkaJsonListenerContainerFactory"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">validatedListener</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Payload</span><span class="token annotation punctuation">@Valid</span><span class="token class-name">ValidatedClass</span> val<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">KafkaListenerErrorHandler</span><span class="token function">validationErrorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>TODO…</p> <p></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-79793.htm">防止重复提交拦截器 spring boot</a></p>
                                        <p>下一个：<a href="/news/article-80519.htm">c++引用折叠</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-18-free-subscribe-node.htm" title="3月18日→22.2M/S|2025年每天更新免费节点Mihomo Node订阅链接地址">3月18日→22.2M/S|2025年每天更新免费节点Mihomo Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-64032.htm" title="0基础学MySQL数据库—从小白到大牛（1）初识数据库">0基础学MySQL数据库—从小白到大牛（1）初识数据库</a></li>
                        <li class="py-2"><a href="/news/article-40566.htm" title="宠物狗粮销售招聘要求（狗粮招聘业务）">宠物狗粮销售招聘要求（狗粮招聘业务）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-mihomo-node.htm" title="1月19日→22.9M/S|2025年每天更新免费节点Mihomo Node订阅链接地址">1月19日→22.9M/S|2025年每天更新免费节点Mihomo Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-latest-mihomo-node.htm" title="2月3日→22.7M/S|2025年每天更新免费节点Mihomo Node订阅链接地址">2月3日→22.7M/S|2025年每天更新免费节点Mihomo Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-48382.htm" title="宠物粮食行业发展前景分析论文范文 宠物粮食行业发展前景分析论文范文大全">宠物粮食行业发展前景分析论文范文 宠物粮食行业发展前景分析论文范文大全</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-mihomo-node-github.htm" title="3月13日→18.3M/S|2025年每天更新免费节点Mihomo Node订阅链接地址">3月13日→18.3M/S|2025年每天更新免费节点Mihomo Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-56480.htm" title="Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker">Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker</a></li>
                        <li class="py-2"><a href="/news/article-67763.htm" title="树的同构 Java">树的同构 Java</a></li>
                        <li class="py-2"><a href="/news/article-55373.htm" title="详细分析虚拟DOM与diff算法">详细分析虚拟DOM与diff算法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- .....:::::: End Service Display Section :::::.... -->
                <!-- .....:::::: Start Footer Section :::::.... -->
        <footer class="footer-section">
            <!-- Start Footer Bottom -->
            <div class="footer-bottom ">
                <div class="container">
                    <div class="row justify-content-md-between justify-content-center align-items-center flex-column-reverse flex-md-row">
                        <div class="col-auto">
                            <div class="footer-bottom-left">
                                <div class="footer-copyright">
                                    <p class="copyright-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                        <a href="/">Mihomo Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <div class="footer-bottom-right">
                                <ul class="footer-soacial">
                                    <li><a href="#" target="_blank">Facebook</a></li>
                                    <li><a href="#" target="_blank">Twitter</a></li>
                                    <li><a href="#" target="_blank">Instagram</a></li>
                                    <li><a href="#" target="_blank">LinkedIn</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Start Footer Bottom -->
        </footer>
        <!-- .....:::::: End Footer Section :::::.... -->
        <!-- material-scrolltop button -->
        <button class="material-scrolltop" type="button"></button>
        <!-- ::::::::::::::All JS Files here :::::::::::::: -->
        <!-- Global Vendor, plugins JS -->
        <!-- <script src="/assets/website/js/frontend/mihomonode/vendor/modernizr-3.11.2.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/vendor/popper.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/vendor/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/vendor/jquery-ui.min.js"></script> -->
        <!--Plugins JS-->
        <!-- <script src="/assets/website/js/frontend/mihomonode/plugins/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/material-scrolltop.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/images-loaded.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/venobox.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/aos.min.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/parallax.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/ajax-mail.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/waypoint.js"></script>
    <script src="/assets/website/js/frontend/mihomonode/plugins/counter.js"></script> -->
        <!-- Use the minified version files listed below for better performance and remove the files listed above -->
        <script src="/assets/website/js/frontend/mihomonode/vendor/vendor.min.js"></script>
        <script src="/assets/website/js/frontend/mihomonode/plugins/plugins.min.js"></script>
        <!-- Main JS -->
        <script src="/assets/website/js/frontend/mihomonode/main.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>